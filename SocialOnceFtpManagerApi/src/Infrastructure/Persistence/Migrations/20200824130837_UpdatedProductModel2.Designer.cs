// <auto-generated />
using EAProductService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using System;

namespace EAProductService.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200824130837_UpdatedProductModel2")]
    partial class UpdatedProductModel2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EAProductService.Domain.Entities.AssemblyPolicyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssemblyPolicyTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.ClassType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClassTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.CostingMethodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CostingMethodTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.EstimatedAssemblyTimeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstimatedAssemblyTimeTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.FlushingMethodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FlushingMethodTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.ManufacturingCategoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManufacturingCategoryTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.ManufacturingPolicyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManufacturingPolicyTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.OrderTrackingPolicyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderTrackingPolicyTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.PolicyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PolicyTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.PreventNegativeInventoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreventNegativeInventoryTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.PriceProfitCalculationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PriceProfitCalculationTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowOnlineAdjustment")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowsInvoiceDiscount")
                        .HasColumnType("bit");

                    b.Property<string>("AlternativeItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationWkshUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssemblyPolicyTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("AutomaticExtTexts")
                        .HasColumnType("bit");

                    b.Property<string>("BaseUnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BinFilter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BudgetProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BudgetQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BudgetedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ClassTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("CogsLcy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CommissionGroup")
                        .HasColumnType("int");

                    b.Property<string>("CommonItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ComponentForecast")
                        .HasColumnType("bit");

                    b.Property<bool>("CostIsPostedToGl")
                        .HasColumnType("bit");

                    b.Property<decimal>("CostOfOpenProductionOrders")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostRegulationPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CostingMethodTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CountryRegionOfOriginCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryRegionPurchasedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DampenerPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DampenerQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DateFilter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultDeferralTemplateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscreteOrderQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<bool>("DropShipmentFilter")
                        .HasColumnType("bit");

                    b.Property<string>("Durability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DutyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DutyDuePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DutyUnitConversion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EstimatedAssemblyTimeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ExpirationCalculation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlushingMethodTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("FpOrderReceiptQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FreightType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenProdPostingGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlobalDimension1Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlobalDimension1Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlobalDimension2Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlobalDimension2Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Gtin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasAutomaticLocation")
                        .HasColumnType("bit");

                    b.Property<bool>("HasAutomaticPicking")
                        .HasColumnType("bit");

                    b.Property<bool>("HasComments")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPlateCover")
                        .HasColumnType("bit");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Homologation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentifierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IncludesInventory")
                        .HasColumnType("bit");

                    b.Property<decimal>("IndirectCostPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InternalVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Inventory")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Inventory01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InventoryPostingGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InventoryValueZero")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAssemblyBom")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCostAdjusted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCreatedFromNonStockItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInCatalog")
                        .HasColumnType("bit");

                    b.Property<bool>("IsKanban")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOutOfStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWebProduct")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDiscGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTrackingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KitPackages")
                        .HasColumnType("int");

                    b.Property<int>("LanguageModelVehicleRef")
                        .HasColumnType("int");

                    b.Property<string>("LastCountingPeriodUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastDateModified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastDirectCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastPhysInvtDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastTimeModified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUnitCostCalcDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeadTimeCalculation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("LocationFilter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotAccumulationPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNoFilter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LotSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LowLevelCode")
                        .HasColumnType("int");

                    b.Property<string>("MainBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturingCategoryTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ManufacturingPolicyTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxTowableWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxWeightOverTowBall")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumInventory")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumOrderQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumOrderQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("NeedsAssembly")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsAssemblyValidation")
                        .HasColumnType("bit");

                    b.Property<decimal>("NegativeAdjustmentLcy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NegativeAdjustmentQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetInvoicedQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NextCountingEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextCountingStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfSubstitutes")
                        .HasColumnType("int");

                    b.Property<string>("NoSeries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OrderMultiple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OrderTrackingPolicyTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("OverflowLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OverheadRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhysInvtCountingPeriodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PlannedOrderReceiptQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlannedOrderReleaseQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlanningIssuesQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlanningReceiptQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlanningReleaseQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlanningTransferShipQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlanningWorksheetQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PolicyTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("PositiveAdjustmentLcy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PositiveAdjustmentQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PreventNegativeInventoryTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("PriceIncludesVat")
                        .HasColumnType("bit");

                    b.Property<int?>("PriceProfitCalculationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PriceUnitConversion")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProductGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ProductionBomNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionForecastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductionForecastQtyBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProfitPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseReqReceiptQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseReqReleaseQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PurchaseUnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasesLcy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchasesQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PutAwayTemplateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PutAwayUnitOfMeasureCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QtyAssignedToShip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyInTransit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnAsmComponent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnAssemblyOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnComponentLines")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnJobOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnProdOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnPurchaseOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnPurchaseReturn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnSalesOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnSalesReturn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnServiceOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyPicked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RearBumperCutTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReceiptRoundingPrecision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ReceiptUnitOfMeasureDouble")
                        .HasColumnType("bit");

                    b.Property<decimal>("RelOrderReceiptQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Reminder")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReorderPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReorderQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ReorderingPolicyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ReplenishmentSystemTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("ResQtyOnAsmComp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnAssemblyOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnInboundTransfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnJobOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnOutboundTransfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnProdOrderComp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnPurchasesReturns")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnReqLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnSalesReturns")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResQtyOnServiceOrders")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReschedulingPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReserveTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReservedQtyOnInventory")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReservedQtyOnProdOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReservedQtyOnPurchasesOrders")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReservedQtyOnSalesOrders")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RolledUpCapOverheadCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RolledUpCapacityCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RolledUpMaterialCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RolledUpMfgOvhdCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RolledUpSubcontractedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RoundingPrecision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoutingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SafetyLeadTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SafetyStockQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesLcy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SalesUnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ScheduledNeedQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ScheduledReceiptQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ScrapPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SearchDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNoFilter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceItemGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShelfNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAgentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SingleLevelCapOvhdCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SingleLevelCapacityCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SingleLevelMaterialCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SingleLevelMfgOvhdCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SingleLevelSubcontrdCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpecialEquipmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StandardCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StatisticsGroup")
                        .HasColumnType("int");

                    b.Property<bool>("StockKeepingUnitExists")
                        .HasColumnType("bit");

                    b.Property<int?>("StockOutWarningTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("SubstitutesExist")
                        .HasColumnType("bit");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TagssWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TariffNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeBucket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TowBallLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TowBallTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("TowValueD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TowbarType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TransOrdReceiptQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransOrdShipmentQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransferredLcy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransferredQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TypologyTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitListPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitsPerParcel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("UsesCrossDocking")
                        .HasColumnType("bit");

                    b.Property<bool>("UsesMainPlan")
                        .HasColumnType("bit");

                    b.Property<string>("VariantFilter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatBusPostingGrPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatProdPostingGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<bool>("WhileStocksLast")
                        .HasColumnType("bit");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AssemblyPolicyTypeId");

                    b.HasIndex("ClassTypeId");

                    b.HasIndex("CostingMethodTypeId");

                    b.HasIndex("EstimatedAssemblyTimeTypeId");

                    b.HasIndex("FlushingMethodTypeId");

                    b.HasIndex("ListId");

                    b.HasIndex("ManufacturingCategoryTypeId");

                    b.HasIndex("ManufacturingPolicyTypeId");

                    b.HasIndex("OrderTrackingPolicyTypeId");

                    b.HasIndex("PolicyTypeId");

                    b.HasIndex("PreventNegativeInventoryTypeId");

                    b.HasIndex("PriceProfitCalculationTypeId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("RearBumperCutTypeId");

                    b.HasIndex("ReorderingPolicyTypeId");

                    b.HasIndex("ReplenishmentSystemTypeId");

                    b.HasIndex("ReserveTypeId");

                    b.HasIndex("StockOutWarningTypeId");

                    b.HasIndex("TowBallTypeId");

                    b.HasIndex("TypologyTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.RearBumperCutType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RearBumperCutTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.ReorderingPolicyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReorderingPolicyTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.ReplenishmentSystemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReplenishmentSystemTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.ReserveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReserveTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.StockOutWarningType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockOutWarningTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Reminder")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.TodoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("TodoLists");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.TowBallType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TowBallTypes");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.TypologyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypologyTypes");
                });

            modelBuilder.Entity("EAProductService.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.Product", b =>
                {
                    b.HasOne("EAProductService.Domain.Entities.AssemblyPolicyType", "AssemblyPolicyType")
                        .WithMany()
                        .HasForeignKey("AssemblyPolicyTypeId");

                    b.HasOne("EAProductService.Domain.Entities.ClassType", "ClassType")
                        .WithMany()
                        .HasForeignKey("ClassTypeId");

                    b.HasOne("EAProductService.Domain.Entities.CostingMethodType", "CostingMethodType")
                        .WithMany()
                        .HasForeignKey("CostingMethodTypeId");

                    b.HasOne("EAProductService.Domain.Entities.EstimatedAssemblyTimeType", "EstimatedAssemblyTimeType")
                        .WithMany()
                        .HasForeignKey("EstimatedAssemblyTimeTypeId");

                    b.HasOne("EAProductService.Domain.Entities.FlushingMethodType", "FlushingMethodType")
                        .WithMany()
                        .HasForeignKey("FlushingMethodTypeId");

                    b.HasOne("EAProductService.Domain.Entities.TodoList", "List")
                        .WithMany()
                        .HasForeignKey("ListId");

                    b.HasOne("EAProductService.Domain.Entities.ManufacturingCategoryType", "ManufacturingCategoryType")
                        .WithMany()
                        .HasForeignKey("ManufacturingCategoryTypeId");

                    b.HasOne("EAProductService.Domain.Entities.ManufacturingPolicyType", "ManufacturingPolicyType")
                        .WithMany()
                        .HasForeignKey("ManufacturingPolicyTypeId");

                    b.HasOne("EAProductService.Domain.Entities.OrderTrackingPolicyType", "OrderTrackingPolicyType")
                        .WithMany()
                        .HasForeignKey("OrderTrackingPolicyTypeId");

                    b.HasOne("EAProductService.Domain.Entities.PolicyType", "PolicyType")
                        .WithMany()
                        .HasForeignKey("PolicyTypeId");

                    b.HasOne("EAProductService.Domain.Entities.PreventNegativeInventoryType", "PreventNegativeInventoryType")
                        .WithMany()
                        .HasForeignKey("PreventNegativeInventoryTypeId");

                    b.HasOne("EAProductService.Domain.Entities.PriceProfitCalculationType", "PriceProfitCalculationType")
                        .WithMany()
                        .HasForeignKey("PriceProfitCalculationTypeId");

                    b.HasOne("EAProductService.Domain.Entities.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("EAProductService.Domain.Entities.RearBumperCutType", "RearBumperCutType")
                        .WithMany()
                        .HasForeignKey("RearBumperCutTypeId");

                    b.HasOne("EAProductService.Domain.Entities.ReorderingPolicyType", "ReorderingPolicyType")
                        .WithMany()
                        .HasForeignKey("ReorderingPolicyTypeId");

                    b.HasOne("EAProductService.Domain.Entities.ReplenishmentSystemType", "ReplenishmentSystemType")
                        .WithMany()
                        .HasForeignKey("ReplenishmentSystemTypeId");

                    b.HasOne("EAProductService.Domain.Entities.ReserveType", "ReserveType")
                        .WithMany()
                        .HasForeignKey("ReserveTypeId");

                    b.HasOne("EAProductService.Domain.Entities.StockOutWarningType", "StockOutWarningType")
                        .WithMany()
                        .HasForeignKey("StockOutWarningTypeId");

                    b.HasOne("EAProductService.Domain.Entities.TowBallType", "TowBallType")
                        .WithMany()
                        .HasForeignKey("TowBallTypeId");

                    b.HasOne("EAProductService.Domain.Entities.TypologyType", "TypologyType")
                        .WithMany()
                        .HasForeignKey("TypologyTypeId");
                });

            modelBuilder.Entity("EAProductService.Domain.Entities.TodoItem", b =>
                {
                    b.HasOne("EAProductService.Domain.Entities.TodoList", "List")
                        .WithMany("Items")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EAProductService.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EAProductService.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAProductService.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EAProductService.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
